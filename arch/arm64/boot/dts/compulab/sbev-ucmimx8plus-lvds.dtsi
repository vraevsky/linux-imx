// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2024 CompuLab LTD.
 */

&{/} {
	lvds_backlight: lvds_backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm2 0 300000 0>;
		brightness-levels = <96 255>;
		num-interpolated-steps = <16>;
		default-brightness-level = <10>;
		status = "okay";
	};

	lvds_panel: lvds0_panel {
		compatible = "boe,hv070wsa-100";
		backlight = <&lvds_backlight>;
		enable-gpios = <&pca9555 3 GPIO_ACTIVE_HIGH>;
		status = "okay";

		port {
			panel_lvds_in: endpoint {
				remote-endpoint = <&lvds_out>;
			};
		};
	};

	/* touch screen reset helper */
	ts_reset: regulator-tsreset {
		compatible = "regulator-fixed";
		regulator-name = "tosuch-reset";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pca9555 4 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-always-on;
	};
};

&i2c3 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	goodix_ts@5d {
		compatible = "goodix,gt911";
		reg = <0x5d>;

		interrupt-parent = <&gpio4>;
		interrupts = <28 IRQ_TYPE_LEVEL_HIGH>;

		pinctrl-names = "default";
		pinctrl-0 = <&touchscreen1_pins>;

		irq-gpios = <&gpio4 28 GPIO_ACTIVE_HIGH>;
/* To be investigated; the drived does not take the device
 * out of reset if reset-gpios is defined inside the device node
 * as of now the ts_reset regulator allows working with the device
 */
		/* reset-gpios = <&pca9555 4 GPIO_ACTIVE_HIGH>; */
		touchscreen-inverted-x;
		touchscreen-inverted-y;
		status = "okay";
	};
};

&iomuxc {

	pinctrl_pwm2: pwm2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SPDIF_RX__PWM2_OUT		0x116
		 >;
	};

	touchscreen1_pins: ts1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI3_RXFS__GPIO4_IO28	0x19
		>;
	};
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "okay";
};

&lvds_backlight {
	status = "okay";
};

&lvds_panel {
	status = "okay";
};

&ldb {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	lvds-channel@0 {
		#address-cells = <1>;
		#size-cells = <0>;
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>;
		status = "okay";

		port@1 {
			reg = <1>;

			lvds_out: endpoint {
				remote-endpoint = <&panel_lvds_in>;
			};
		};
	};
};

&ldb_phy {
	status = "okay";
};

&lcdif2 {
	status = "okay";
};
